version: "3.8"

services:
    mysql:
        container_name: capstone_mysql
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: admin
            MYSQL_USER: root
            MYSQL_PASS: admin
        volumes:
            - mysql-volume:/var/lib/mysql
        ports:
            - 3306:3306

    mongo:
        container_name: capstone_mongo
        image: mongo:latest
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: admin
        volumes:
            - mongo-volume:/data/db
        ports:
            - 27017:27017

    mongo-express:
        container_name: capstone_mongo_express
        image: mongo-express
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: admin

    kafka:
        container_name: capstone_kafka
        image: bitnami/kafka:latest
        ports:
            - "9092:9092"
        volumes:
            - kafka-volume:/bitnami/kafka
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_LISTENER=PLAINTEXT://kafka:9092
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
        depends_on:
            - zookeeper

    zookeeper:
        container_name: capstone_zookeeper
        image: bitnami/zookeeper:latest
        volumes:
            - zookeeper-volume:/bitnami/zookeeper
        ports:
            - "2181:2181"
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes

    frontend:
        container_name: capstone_frontend
        build: ./frontend
        expose:
            - 3000
        ports:
            - 3000:3000
        volumes:
            - ./frontend:/frontend

    backend:
        container_name: capstone_backend
        build: ./backend
        expose:
            - 8080
        ports:
            - 8080:8080
        volumes:
            - ./backend:/backend
        depends_on:
            - mongo
            - mysql
            - kafka

    crop-face-server:
        container_name: capstone_crop
        build: ./crop-face-server
        expose:
            - 5000
        ports:
            - 5000:5000
        volumes:
            - ./crop-face-server:/crop-face-server

    nginx:
        image: nginx:latest
        container_name: capstone_nginx
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - frontend
            - crop-face-server
            - backend

volumes:
    mysql-volume:
    mongo-volume:
    kafka-volume:
    zookeeper-volume:
    nginx-volume:
