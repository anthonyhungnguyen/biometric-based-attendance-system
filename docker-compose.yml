version: "3.8"

services:
    frontend:
        container_name: capstone_frontend
        image: frontend:latest
        build:
            context: ./server/frontend
            dockerfile: Dockerfile
        volumes:
            - "/frontend/node_modules"
        depends_on:
            - backend

    backend:
        container_name: capstone_backend
        image: phuchung276/capstone_backend:latest
        depends_on:
            - mysql
            - kafka
    mysql:
        container_name: capstone_mysql
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: admin
            MYSQL_USER: admin
            MYSQL_PASS: admin
        volumes:
            - mysql-volume:/var/lib/mysql
            - ./server/database/backup.sql:/docker-entrypoint-initdb.d/setup.sql
        ports:
            - 3306:3306

    kafka:
        container_name: capstone_kafka
        image: bitnami/kafka:latest
        ports:
            - "9092:9092"
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_LISTENER=PLAINTEXT://kafka:9092
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
        depends_on:
            - zookeeper

    zookeeper:
        container_name: capstone_zookeeper
        image: bitnami/zookeeper:latest
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes

    redis:
        container_name: capstone_redis
        image: bitnami/redis:latest
        volumes:
            - redis-volume:/bitnami/redis/data
        ports:
            - "6379:6379"
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
            - REDIS_DISABLE_COMMANDS=FLUSHDB, FLUSHALL
    nginx:
        image: nginx:latest
        container_name: capstone_nginx
        restart: unless-stopped
        tty: true
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./server/reverse-proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - frontend
volumes:
    mysql-volume:
    redis-volume:

networks:
    default:
        name: capstone
